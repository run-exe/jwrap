/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package jwrap.boot;

import java.io.File;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.net.URL;
import java.net.URLClassLoader;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.Base64;

public class App {
	public static void main(String[] args) {
		boolean debug = false;
		String jar = null;
		String main = null;
		String[] arguments = null;
		for (int i = 0; i < args.length; i++) {
			switch (args[i]) {
			case "--debug":
				debug = (args[i + 1].toLowerCase()=="true");
				i++;
				break;
			case "--jar":
				jar = parseStringArg(args[i + 1]);
				i++;
				break;
			case "--main":
				main = parseStringArg(args[i + 1]);
				i++;
				break;
			case "--args":
				arguments = parseStringArrayArg(args[i + 1]);
				i++;
				break;
			}
		}
		//String parentDir = getParentDirPath(jar);

		try {
			if (!new File(jar).exists())
			{
				throw new Exception("JAR file not exist: " + jar);
			}
			URL url = (new File(jar)).toURI().toURL();
			URLClassLoader classLoader = URLClassLoader.newInstance(new URL[] { url });
			Class<?> globalMain = classLoader.loadClass(main);
			Method staticMethod = globalMain.getDeclaredMethod("main", String[].class);
			staticMethod.invoke(null, new Object[] { arguments });
		} catch (Exception ex) {
			ex.printStackTrace();
			System.exit(1);
		}
	}

	private static String parseStringArg(String base64) {
		byte[] decodedBytes = Base64.getDecoder().decode(base64);
		return new String(decodedBytes);
	}

	private static String[] parseStringArrayArg(String base64List) {
		String[] args = base64List.split(",");
		String[] result = new String[args.length];
		for (int i = 0; i < args.length; i++) {
			result[i] = parseStringArg(args[i]);
		}
		return result;
	}

	private static String getParentDirPath(String filePath) {
		Path path = Paths.get(filePath);
		Path parentPath = path.getParent();
		return parentPath.toString();
	}
}
